#pragma checksum "C:\Users\Saito\Desktop\TesisGit\Tesis\Tesis\Pages\Inventory\InventoryMain.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cfe4e3dce404538136f3781083d868bd5e00f555"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Tesis.Pages.Inventory.Pages_Inventory_InventoryMain), @"mvc.1.0.razor-page", @"/Pages/Inventory/InventoryMain.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Inventory/InventoryMain.cshtml", typeof(Tesis.Pages.Inventory.Pages_Inventory_InventoryMain), null)]
namespace Tesis.Pages.Inventory
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Saito\Desktop\TesisGit\Tesis\Tesis\Pages\_ViewImports.cshtml"
using Tesis;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cfe4e3dce404538136f3781083d868bd5e00f555", @"/Pages/Inventory/InventoryMain.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c9b8230867da10110ca3d56b2c2fbb3a8e440d01", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Inventory_InventoryMain : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/icons/search.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("20"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("neptune"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\Saito\Desktop\TesisGit\Tesis\Tesis\Pages\Inventory\InventoryMain.cshtml"
  
    ViewData["Title"] = "Inventory";

#line default
#line hidden
            BeginContext(52, 307, true);
            WriteLiteral(@"
    <div class=""container"">
        <h1>Movimiento de inventario</h1>

        <br />

        <div class=""form-row"">



            <div class=""input-group col-md-8"">
                <div class=""input-group-prepend"">
                    <div class=""input-group-text"">
                        ");
            EndContext();
            BeginContext(359, 60, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "d64c509f34714494a28b015932c0e404", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(419, 367, true);
            WriteLiteral(@"
                    </div>
                </div>
                <input id=""SearchBar""
                       oninput=""SearchProduct(this.value)""
                       class=""form-control mr-sm-2 ""
                       type=""search""
                       placeholder=""Buscar productos""
                       aria-label=""Search"">



                ");
            EndContext();
            BeginContext(786, 538, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "753ddf13ace84a6d89ad9f2cfb576c6f", async() => {
                BeginContext(818, 499, true);
                WriteLiteral(@"
                    <input type=""radio"" name=""rdo"" id=""AddStockRadioBtn"" name=""AddOrDeleteStockRadioBtn"" checked />
                    <input type=""radio"" name=""rdo"" id=""DeleteStockRadioBtn"" name=""AddOrDeleteStockRadioBtn"" />
                    <div class=""switch"">
                        <label for=""AddStockRadioBtn"">Añadir</label>
                        <label for=""DeleteStockRadioBtn"">Quitar</label>
                        <span></span>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1324, 13201, true);
            WriteLiteral(@"



            </div>
        </div>



        <!--Original add/delete inventory    <div class=""custom-control custom-radio"">
        <input type=""radio"" id=""AddStockRadioBtn"" name=""AddOrDeleteStockRadioBtn"" class=""custom-control-input"" checked="""">
        <label class=""custom-control-label"" for=""AddStockRadioBtn""> Añadir </label>
    </div>
    <div class=""custom-control custom-radio"">
        <input type=""radio"" id=""DeleteStockRadioBtn"" name=""AddOrDeleteStockRadioBtn"" class=""custom-control-input"">
        <label class=""custom-control-label"" for=""DeleteStockRadioBtn""> Eliminar </label>
    </div>

        -->


        <br /><br />


        <div class=""form-row"">

            <div class=""form-group col-md-6"">
                <h4>Inventario</h4>
                <ul id=""SearchProducts"" class=""list-group"">
                    <li class=""list-group-item""> Ninguna busqueda realizada </li>
                </ul>
            </div>
            <div class=""form-group col-md-6"">
   ");
            WriteLiteral(@"             <h4>Productos en movimiento</h4>
                <ul id=""EditProducts"" class=""list-group"">
                    <li class=""list-group-item""> No se ha añadido ningún producto </li>
                </ul>
            </div>
        </div>

        <button class=""btn btn-outline-danger my-2 my-sm-0 SaveAndDestroy""> Inventario en 0 </button>

        <button type=""button"" onclick=""SaveStock()"" class=""btn btn-outline-primary pull-right offset-9 SaveAndDestroy""> Guardar </button>


    </div>


<script>

    // Global variables
    var SearchApprovedBool = true;
    var SearchProductsList = [];
    var EditProductsList = [];

    function SaveStock() {

        // Update stock values
        for (var i = 0; i < EditProductsList.length; i++) {
            // Create a variable to save the product id of the edit products
            var NewProductStockId = ""#ProductStock"" + i;

            // Update the stock value of teh edit products by the user input
            EditProducts");
            WriteLiteral(@"List[i].ProductStock = $(NewProductStockId).val();
        }

        // Save the selection of add or delete
        if ($(DeleteStockRadioBtn).is(':checked')) {
            var AddOrDeleteRadioBtn = ""Delete"";
        } else {
            var AddOrDeleteRadioBtn = ""Add"";
        }

        // Make the AJAX request to save modifications in products of stock
        $.ajax({
            type: ""POST"",
            url: ""/Inventory/SaveStock"",
            data: {
                // Send the selection of add or delete
                AddOrDeleteString: AddOrDeleteRadioBtn,

                // Send products to modify in JSON
                EditProductsListJSON: JSON.stringify(EditProductsList)
            },
            // If the request is successfull
            success: function (response) {

                //console.log(response);

                EditProductsList = Array.from(JSON.parse(response));

                console.log(EditProductsList);

                // Update the Lis");
            WriteLiteral(@"ts
                UpdateLists();
            }
        })
    }

    // Gets called to search by the search bar
    function SearchProduct(SearchWord) {

        // If search is approved by time
        if (SearchApprovedBool) {

            // Clear Search Products List
            $(SearchProducts).empty();

            // If the search bar has content
            if (SearchWord.length > 0) {
                $(""<li class=\""list-group-item\""> Cargando... </li>"").appendTo(SearchProducts);

                // Make the AJAX request to search products
                $.ajax({
                    type: ""GET"",
                    url: ""/Products/SearchProduct"",
                    dataType: ""json"",
                    data: {
                        SearchString: SearchWord
                    },
                    contentType: 'application/json; charset=utf-8',
                    // If the request is successfull
                    success: function (Response) {

                ");
            WriteLiteral(@"        // Set the products to the global variable
                        SearchProductsList = Array.from(JSON.parse(Response));

                        // Update Lists HTML
                        UpdateLists();

                        // Check if any product was found
                        if (SearchProductsList.length == 0) {
                            // Clear Search Products List
                            $(SearchProducts).empty();

                            // No product returned by the server
                            $(""<li class=\""list-group-item\""> Ningun producto coincide con la busqueda </li>"").appendTo(SearchProducts);
                        }
                    }
                });
            } else {
                // Clear Search Products List
                $(SearchProducts).empty();

                // Show the user haven't search anything
                $(""<li class=\""list-group-item\""> Ninguna busqueda realizada </li>"").appendTo(SearchProducts);
   ");
            WriteLiteral(@"         }

            // Deny search
            SearchApproved();
        }
    }

    function AddProductToEditInventory(ProductIndex) {

        // Add the product to the list of editing products
        EditProductsList.push(SearchProductsList[ProductIndex]);

        // Remove the product from the list of searched products
        SearchProductsList.splice(ProductIndex, 1);

        // Update Lists
        SearchProduct($(SearchBar).val());
    }

    function RemoveProductFromEditInventory(ProductIndex) {
        // Remove the product from the list of editing products
        EditProductsList.splice(ProductIndex, 1);

        // Update Lists
        SearchProduct($(SearchBar).val());
    }

    // Update Lists
    function UpdateLists() {

        // Clear Search Products List
        $(SearchProducts).empty();

        // Fill the list with the products returned by the server
        for (var i = 0; i < SearchProductsList.length; i++) {
            // If the Product");
            WriteLiteral(@" is not being edit yet
            if (!EditProductsContains(SearchProductsList[i])) {
                $(""<li id=\""SearchProduct"" + i + ""\"" class=\""p-2 list-group-item\"">"" +
                    ""<div class=\""d-flex justify-content-between\"">"" +
                    ""<p class=\""col-4 my-auto\"">"" + SearchProductsList[i].ProductName + ""</p>"" +
                    ""<p class=\""col-2 my-auto\"">"" + SearchProductsList[i].ProductStock + ""</p>"" +
                    ""<button type=\""button\"" onclick=\""AddProductToEditInventory("" + i + "")\"" class=\""btn btn-sm btn-outline-success\""> > </button>"" +
                    ""</div > "" +
                    ""</li>"").appendTo(SearchProducts);
            }
        }

        // Clear Edit Products List HTML
        $(EditProducts).empty();

        // Update Edit Products List
        if (EditProductsList.length == 0) {
            // No product added to edit list
            $(""<li class=\""list-group-item\""> No se ha añadido ningún producto </li>"").appendTo(EditP");
            WriteLiteral(@"roducts);
        } else {
            // Add products to edit list
            for (var i = 0; i < EditProductsList.length; i++) {
                $(
                    ""<li id=\""EditProduct"" + i + ""\""class=\""p-2 list-group-item\"">"" +
                    ""<div class=\""d-flex justify-content-between\"">"" +
                    ""<p class=\""col-4 my-auto\"">"" + EditProductsList[i].ProductName + ""</p>"" +
                    ""<p class=\""col-2 my-auto\"">"" + EditProductsList[i].ProductStock + ""</p>"" +
                    ""<input "" +
                    ""id =\""ProductStock"" + i + ""\"""" +
                    ""class=\""col-3 form-control\"""" +
                    ""type=\""number\"""" +
                    ""min=\""0\"""" +
                    ""value=\""0\"""" +
                    ""placeholder=\""Inventario\"">"" +
                    ""<button type=\""button\"" onclick=\""RemoveProductFromEditInventory("" + i + "")\"" class=\""btn btn-sm btn-outline-danger\""> x </button>"" +
                    ""</div > "" +
                  ");
            WriteLiteral(@"  ""</li>""
                ).appendTo(EditProducts);
            }
        }
    }

    // Check if Edit Products List contains a certain product
    function EditProductsContains(SearchProduct) {
        // Loop throught the List
        for (var i = 0; i < EditProductsList.length; i++) {
            if (EditProductsList[i].Id == SearchProduct.Id) {
                return true;
            }
        }

        return false;
    }

    function SearchApproved() {

        // Deny search
        SearchApprovedBool = false;

        setTimeout(function () {

            // Delay next search for 1/10 second
            SearchApprovedBool = true;
        }, 100);
    }

</script>

<style>
    .btn-outline-primary{
        margin-left:1035px;
        position:absolute;
        
    }
    .SaveAndDestroy{
        position:absolute;
        bottom:110px;
    }
    .list-group-item:last-child {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0.25rem;
}
  ");
            WriteLiteral(@"  .list-group-item:first-child {
    border-top-left-radius: 0.25rem;
     border-top-right-radius: 0;
}
    .list-group {
        max-height: 507px;
        
        overflow: auto;
    }

    footer {
        position: absolute;
        right: 0;
        bottom: 0;
        left: 0;
        padding: 1rem;
    }

    .order-scroller {
        width: 100%;
        height: 100%;
        overflow: hidden;
        overflow-y: auto;
    }


    ::-webkit-scrollbar {
        width: 4px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
        background: rgb(224,224,224);
        border-left: solid 1px rgb(200,200,200);
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: rgb(168,168,168);
        background: #393939;
        min-height: 30px;
    }



    .neptune {
        font-family: sans-serif;
        font-weight: 700;
    }

    .switch {
        position: relative;
        top: 60%;
        left: 400px;
        width: 150px;");
            WriteLiteral(@"
        height: 50px;
        text-align: center;
        margin: -30px 0 0 -75px;
        background: #4cd964;
        -webkit-transition: all 0.2s ease;
        -moz-transition: all 0.2s ease;
        -o-transition: all 0.2s ease;
        -ms-transition: all 0.2s ease;
        transition: all 0.2s ease;
        border-radius: 25px;
    }

        .switch span {
            position: absolute;
            width: 20px;
            height: 4px;
            top: 50%;
            left: 50%;
            margin: -2px 0px 0px -4px;
            background: #fff;
            display: block;
            -webkit-transform: rotate(-45deg);
            -moz-transform: rotate(-45deg);
            -o-transform: rotate(-45deg);
            -ms-transform: rotate(-45deg);
            transform: rotate(-45deg);
            -webkit-transition: all 0.2s ease;
            -moz-transition: all 0.2s ease;
            -o-transition: all 0.2s ease;
            -ms-transition: all 0.2s ease;
            ");
            WriteLiteral(@"transition: all 0.2s ease;
            border-radius: 2px;
        }

            .switch span:after {
                content: """";
                display: block;
                position: absolute;
                width: 4px;
                height: 12px;
                margin-top: -8px;
                background: #fff;
                -webkit-transition: all 0.2s ease;
                -moz-transition: all 0.2s ease;
                -o-transition: all 0.2s ease;
                -ms-transition: all 0.2s ease;
                transition: all 0.2s ease;
                border-radius: 2px;
            }

    input[type=radio] {
        display: none;
    }

    .switch label {
        cursor: pointer;
        color: rgba(0,0,0,0.2);
        width: 60px;
        line-height: 50px;
        -webkit-transition: all 0.2s ease;
        -moz-transition: all 0.2s ease;
        -o-transition: all 0.2s ease;
        -ms-transition: all 0.2s ease;
        transition: all 0.2s ease;
    ");
            WriteLiteral(@"}

    label[for=AddStockRadioBtn] {
        position: absolute;
        left: 0px;
        height: 20px;
    }

    label[for=DeleteStockRadioBtn] {
        position: absolute;
        right: 0px;
    }

    #DeleteStockRadioBtn:checked ~ .switch {
        background: #ff3b30;
    }

        #DeleteStockRadioBtn:checked ~ .switch span {
            background: #fff;
            margin-left: -8px;
        }

            #DeleteStockRadioBtn:checked ~ .switch span:after {
                background: #fff;
                height: 20px;
                margin-top: -8px;
                margin-left: 8px;
            }

    #AddStockRadioBtn:checked ~ .switch label[for=AddStockRadioBtn] {
        color: #fff;
    }

    #DeleteStockRadioBtn:checked ~ .switch label[for=DeleteStockRadioBtn] {
        color: #fff;
    }

    footer {
        bottom: 0;
    }
</style>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_Inventory_InventoryMain> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Inventory_InventoryMain> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Inventory_InventoryMain>)PageContext?.ViewData;
        public Pages_Inventory_InventoryMain Model => ViewData.Model;
    }
}
#pragma warning restore 1591
